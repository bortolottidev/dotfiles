## Remember to call it with extra vars
# account=$USER
---
- hosts: localhost
  gather_facts: yes
  become: yes
  vars:
    zdotdir: ~/.config/zsh
  tasks:
  - name: update arch packages
    pacman:
      update_cache: yes
      upgrade: yes 
    when: ansible_distribution == "Arch"

    # Tools 

  - name: install unzip
    pacman: name=unzip
    when: ansible_distribution == "Arch"
  - name: install pbcopy required by nvim
    pacman: name=xsel
    when: ansible_distribution == "Arch"
  - name: install ripgrep in order to grep string in telescope
    pacman: name=ripgrep
    when: ansible_distribution == "Arch"
  - name: install vnstat
    pacman: name=vnstat
    when: ansible_distribution == "Arch"
  - name: install fortune for random phrase at nvim start
    pacman: name=fortune-mod
    when: ansible_distribution == "Arch"
  - name: install kitty for coding
    pacman: name=kitty
    when: ansible_distribution == "Arch"
  - name: install docker-compose
    pacman: name=docker-compose
    when: ansible_distribution == "Arch"
  - name: install zsh for console
    pacman: name=zsh
    when: ansible_distribution == "Arch"
  - name: set default shell to zsh
    shell: usermod --shell $(which zsh) {{ account }}
    when: ansible_distribution == "Arch"
  - name: set zshenv if not exists
    shell: 
      cmd: |
        if [[ -f  ~/.zshenv ]]
        then
          echo ".zshenv already exists, nothing to do."
        else
          echo ".zshenv does not exist on your filesystem."
          echo "export ZDOTDIR={{ zdotdir }}"  > ~/.zshenv
          echo "[[ -f \$ZDOTDIR/.zshenv ]] && . \$ZDOTDIR/.zshenv" >> ~/.zshenv
        fi
    become_user: "{{ account }}"
  - name: create zsh plugsin folder if not exists
    shell: 
      cmd: |
        if [[ -d  {{ zdotdir }}/plugins ]]
        then
          echo "{{ zdotdir }}/plugins directory already exists, nothing to do."
        else
          mkdir {{ zdotdir }}/plugins
          mkdir {{ zdotdir }}/custom
          mkdir {{ zdotdir }}/custom/plugins
        fi
    become_user: "{{ account }}"
  - name: create zsh plugins directory exists (in a better way?)
    file:
      path: "{{ zdotdir }}/plugins"
      state: directory
      mode: 0775
      recurse: yes
    become: true
    become_user: "{{ account }}"
  - name: install ohmyzsh
    shell:
      cmd: |
        if [[ ! -d  {{ zdotdir }}/plugins/.oh-my-zsh ]]
        then
          ZSH={{ zdotdir }}/plugins/.oh-my-zsh sh -c "$(curl -L https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
          rm ${HOME}/.zshrc
        else
          echo "omzsh already installed, nothing to do."
        fi
    become_user: "{{ account }}"
  - name: install autosuggestion plugin
    become_user: "{{ account }}"
    ansible.builtin.git:
      repo: 'https://github.com/zsh-users/zsh-autosuggestions.git'
      dest: "{{ zdotdir }}/custom/plugins/zsh-autosuggestions"
  - name: install syntax highliting plugin
    become_user: "{{ account }}"
    ansible.builtin.git:
      repo: 'https://github.com/zsh-users/zsh-syntax-highlighting.git'
      dest: "{{ zdotdir }}/custom/plugins/zsh-syntax-highlighting"

    # Development

  - name: install node
    pacman:
      name: ['nodejs', 'npm']
    when: ansible_distribution == "Arch"
  - name: install nvim
    pacman: name=neovim
    when: ansible_distribution == "Arch"
  - name: install fira code release
    pacman: name=ttf-fira-code
    when: ansible_distribution == "Arch"
  - name: create directory fonts if not present
    file:
      path: ~/.local/share/fonts/nerd-fonts
      state: directory
      mode: 0775
      recurse: yes
    become: true
    become_user: "{{ account }}"
  - name: install fonts
    ansible.builtin.get_url:
      url: https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Regular/complete/Fira%20Code%20Regular%20Nerd%20Font%20Complete.ttf 
      dest: "~/.local/share/fonts/nerd-fonts/Fira Code Regular Nerd Font Complete.ttf"
    become: true
    become_user: "{{ account }}"

    # Environment

  - name: install browser
    pacman: name=chromium
    when: ansible_distribution == "Arch"
  - name: install polybar
    pacman: name=polybar
    when: ansible_distribution == "Arch"
  - name: install rofi launcher
    pacman: name=rofi
    when: ansible_distribution == "Arch"
  - name: install TMUX
    pacman: name=tmux
    when: ansible_distribution == "Arch"
  - name: install TMUX plugin manager
    ansible.builtin.git:
      repo: https://github.com/tmux-plugins/tpm
      dest: $HOME/.config/tmux/plugins/tpm
      single_branch: yes
      version: master
    become: true
    become_user: "{{ account }}"
